# The Wandering Inn - Volume 1
# by pirateaba
# https://wanderinginn.com

#####################################################################

# Adding this alerts the user that there is an official eBook available, in case the user wants to support the author.
# Can also be a list of URLs, for example to promote multiple stores.
# The scraper will of course still work.
officialBookUrl: https://www.amazon.com/dp/B07G4MX1Z4

#####################################################################

# URL of the first chapter (or prologue) of the webfiction
startUrl: https://wanderinginn.com/2016/07/27/1-00/
# OPTIONAL: URL of the last chapter. For example, if you want to split a fiction into different volumes, you can create
# a config file for each.
endUrl: https://wanderinginn.com/2017/03/04/1-45/
# OPTIONAL: A list of URLs that you don't want in your final eBook. Will be skipped during download or conversion.
# skipUrls:
#  - https://...

# EPUB metadata (more information: https://wiki.mobileread.com/wiki/Metadata#ePUB_metadata)
metadata:
  title: The Wandering Inn - Volume 1
  # The "author" key will be renamed into the "creator" key for the EPUB
  author: pirateaba
  description: |
    “No killing Goblins.”
    
    So reads the sign outside of The Wandering Inn, a small building run by a young woman named Erin Solstice. She serves pasta with sausage, blue fruit juice, and dead acid flies on request. And she comes from another world. Ours.
    
    It’s a bad day when Erin finds herself transported to a fantastical world and nearly gets eaten by a Dragon. She doesn’t belong in a place where monster attacks are a fact of life, and where Humans are one species among many. But she must adapt to her new life. Or die.
    
    In a dangerous world where magic is real and people can level up and gain classes, Erin Solstice must battle somewhat evil Goblins, deadly Rock Crabs, and hungry [Necromancers]. She is no warrior, no mage. Erin Solstice runs an inn.
    
    She’s an [Innkeeper].
  # OPTIONAL: Default metadata fields, can be changed if required.
  language: en
  publisher: Web Fiction Scraper
  # The book UUID will be generated based on the author and title (here: pirateaba-thewanderinginn) if none is provided.
  identifier: 938ed288-8a8c-55bb-a3b2-9cae45e3c6e1
  # You can also include your own custom metdata tags, e.g.:
  date: "2017-03-04"

# OPTIONAL: File locations / paths
files:
  # By default, the working folder in named the same as the config file and placed inside data/. Default here would be:
  workingFolder: Wandering_Inn_Vol_1
  # The following locations are relative to (inside) the workingFolder
  # Path to a cover image file.
  coverFile: cover.jpg
  # The output EPUB file. Default here would be:
  epubFile: The Wandering Inn - Volume 1.epub
  # A list of alternative eBook formats (just the extension without name or dot) that the epub should be converted into.
  # Make sure Calibre's ebook-convert tool is in your PATH variable and usable through the command line.
  ebookFormats:
    - mobi
  # A path where the final eBook gets copied to. If multiple formats are generated, this will be repeated for each of them.
#  copyBookTo:

# Element CSS selectors (more information: https://facelessuser.github.io/soupsieve/)
selectors:
  # Element containing the chapter title
  # (Select the element with the CSS class "entry-title")
  titleElement: .entry-title
  # Element containing the chapter content
  # (Select the element with the class "entry-content")
  contentElement: .entry-content
  # Element linking the next chapter, has to have the "href" attribute
  # (Select the link with text content "Next Chapter" inside the contentElement)
  nextChapterElement: .entry-content a:-soup-contains("Next Chapter")
  # OPTIONAL: Element after which everything is removed, by default the last <p> inside contentElement
  # Since in The Wandering Inn links to previous / next chapters at the end of the post, we select that as cut-off
  # (Select the paragraph which contains a link with text content "Next Chapter")
  cutOffElement: p:has(a:-soup-contains("Next Chapter"))

# Substitutions which will be applied to all chapters
# By default, all empty elements, e.g. paragraphs, are removed. This can be disabled by including the following:
# removeEmptyElements: false
# You can use css selectors, text or regular expressions.
# For chapter-specific substitutions, include the chapter URL
# If replaceWith is emitted, the selected element(s) will be removed
substitutions:
  # This will be applied to all chapters
  - selectorType: text
    selector: <p>—-</p>
    replaceWith: <hr/>
  # This one would only be applied to the specified chapter
  #- chapterUrl: https://wanderinginn.com/2017/03/04/1-45/
  #  selectorType: css
  #  selector: p:-soup-contains("Author’s Note")
